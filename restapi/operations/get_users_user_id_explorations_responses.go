package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/influxdata/chronograf/models"
)

/*GetUsersUserIDExplorationsOK Data Explorations saved sessions for user are returned.

swagger:response getUsersUserIdExplorationsOK
*/
type GetUsersUserIDExplorationsOK struct {

	// In: body
	Payload *models.Explorations `json:"body,omitempty"`
}

// NewGetUsersUserIDExplorationsOK creates GetUsersUserIDExplorationsOK with default headers values
func NewGetUsersUserIDExplorationsOK() *GetUsersUserIDExplorationsOK {
	return &GetUsersUserIDExplorationsOK{}
}

// WithPayload adds the payload to the get users user Id explorations o k response
func (o *GetUsersUserIDExplorationsOK) WithPayload(payload *models.Explorations) *GetUsersUserIDExplorationsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users user Id explorations o k response
func (o *GetUsersUserIDExplorationsOK) SetPayload(payload *models.Explorations) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersUserIDExplorationsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetUsersUserIDExplorationsNotFound Data user does not exist.

swagger:response getUsersUserIdExplorationsNotFound
*/
type GetUsersUserIDExplorationsNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersUserIDExplorationsNotFound creates GetUsersUserIDExplorationsNotFound with default headers values
func NewGetUsersUserIDExplorationsNotFound() *GetUsersUserIDExplorationsNotFound {
	return &GetUsersUserIDExplorationsNotFound{}
}

// WithPayload adds the payload to the get users user Id explorations not found response
func (o *GetUsersUserIDExplorationsNotFound) WithPayload(payload *models.Error) *GetUsersUserIDExplorationsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users user Id explorations not found response
func (o *GetUsersUserIDExplorationsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersUserIDExplorationsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetUsersUserIDExplorationsDefault Unexpected internal service error

swagger:response getUsersUserIdExplorationsDefault
*/
type GetUsersUserIDExplorationsDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersUserIDExplorationsDefault creates GetUsersUserIDExplorationsDefault with default headers values
func NewGetUsersUserIDExplorationsDefault(code int) *GetUsersUserIDExplorationsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetUsersUserIDExplorationsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get users user ID explorations default response
func (o *GetUsersUserIDExplorationsDefault) WithStatusCode(code int) *GetUsersUserIDExplorationsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get users user ID explorations default response
func (o *GetUsersUserIDExplorationsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get users user ID explorations default response
func (o *GetUsersUserIDExplorationsDefault) WithPayload(payload *models.Error) *GetUsersUserIDExplorationsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users user ID explorations default response
func (o *GetUsersUserIDExplorationsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersUserIDExplorationsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
