package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/influxdata/chronograf/models"
)

/*PatchUsersUserIDNoContent Users's configuration was changed

swagger:response patchUsersUserIdNoContent
*/
type PatchUsersUserIDNoContent struct {
}

// NewPatchUsersUserIDNoContent creates PatchUsersUserIDNoContent with default headers values
func NewPatchUsersUserIDNoContent() *PatchUsersUserIDNoContent {
	return &PatchUsersUserIDNoContent{}
}

// WriteResponse to the client
func (o *PatchUsersUserIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
}

/*PatchUsersUserIDNotFound Happens when trying to access a non-existent user.

swagger:response patchUsersUserIdNotFound
*/
type PatchUsersUserIDNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchUsersUserIDNotFound creates PatchUsersUserIDNotFound with default headers values
func NewPatchUsersUserIDNotFound() *PatchUsersUserIDNotFound {
	return &PatchUsersUserIDNotFound{}
}

// WithPayload adds the payload to the patch users user Id not found response
func (o *PatchUsersUserIDNotFound) WithPayload(payload *models.Error) *PatchUsersUserIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch users user Id not found response
func (o *PatchUsersUserIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchUsersUserIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PatchUsersUserIDDefault A processing or an unexpected error.

swagger:response patchUsersUserIdDefault
*/
type PatchUsersUserIDDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchUsersUserIDDefault creates PatchUsersUserIDDefault with default headers values
func NewPatchUsersUserIDDefault(code int) *PatchUsersUserIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PatchUsersUserIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the patch users user ID default response
func (o *PatchUsersUserIDDefault) WithStatusCode(code int) *PatchUsersUserIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the patch users user ID default response
func (o *PatchUsersUserIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the patch users user ID default response
func (o *PatchUsersUserIDDefault) WithPayload(payload *models.Error) *PatchUsersUserIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch users user ID default response
func (o *PatchUsersUserIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchUsersUserIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
