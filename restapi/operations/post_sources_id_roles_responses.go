package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/influxdata/chronograf/models"
)

/*PostSourcesIDRolesCreated Successfully created new role

swagger:response postSourcesIdRolesCreated
*/
type PostSourcesIDRolesCreated struct {
	/*Location of the newly created role resource.
	  Required: true
	*/
	Location string `json:"Location"`

	// In: body
	Payload *models.Role `json:"body,omitempty"`
}

// NewPostSourcesIDRolesCreated creates PostSourcesIDRolesCreated with default headers values
func NewPostSourcesIDRolesCreated() *PostSourcesIDRolesCreated {
	return &PostSourcesIDRolesCreated{}
}

// WithLocation adds the location to the post sources Id roles created response
func (o *PostSourcesIDRolesCreated) WithLocation(location string) *PostSourcesIDRolesCreated {
	o.Location = location
	return o
}

// SetLocation sets the location to the post sources Id roles created response
func (o *PostSourcesIDRolesCreated) SetLocation(location string) {
	o.Location = location
}

// WithPayload adds the payload to the post sources Id roles created response
func (o *PostSourcesIDRolesCreated) WithPayload(payload *models.Role) *PostSourcesIDRolesCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post sources Id roles created response
func (o *PostSourcesIDRolesCreated) SetPayload(payload *models.Role) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostSourcesIDRolesCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Location
	rw.Header().Add("Location", fmt.Sprintf("%v", o.Location))

	rw.WriteHeader(201)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostSourcesIDRolesDefault A processing or an unexpected error.

swagger:response postSourcesIdRolesDefault
*/
type PostSourcesIDRolesDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostSourcesIDRolesDefault creates PostSourcesIDRolesDefault with default headers values
func NewPostSourcesIDRolesDefault(code int) *PostSourcesIDRolesDefault {
	if code <= 0 {
		code = 500
	}

	return &PostSourcesIDRolesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post sources ID roles default response
func (o *PostSourcesIDRolesDefault) WithStatusCode(code int) *PostSourcesIDRolesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post sources ID roles default response
func (o *PostSourcesIDRolesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post sources ID roles default response
func (o *PostSourcesIDRolesDefault) WithPayload(payload *models.Error) *PostSourcesIDRolesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post sources ID roles default response
func (o *PostSourcesIDRolesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostSourcesIDRolesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
