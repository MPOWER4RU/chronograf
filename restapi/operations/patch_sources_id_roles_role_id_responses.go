package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/influxdata/chronograf/models"
)

/*PatchSourcesIDRolesRoleIDNoContent Role's configuration was changed

swagger:response patchSourcesIdRolesRoleIdNoContent
*/
type PatchSourcesIDRolesRoleIDNoContent struct {
}

// NewPatchSourcesIDRolesRoleIDNoContent creates PatchSourcesIDRolesRoleIDNoContent with default headers values
func NewPatchSourcesIDRolesRoleIDNoContent() *PatchSourcesIDRolesRoleIDNoContent {
	return &PatchSourcesIDRolesRoleIDNoContent{}
}

// WriteResponse to the client
func (o *PatchSourcesIDRolesRoleIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
}

/*PatchSourcesIDRolesRoleIDNotFound Happens when trying to access a non-existent role.

swagger:response patchSourcesIdRolesRoleIdNotFound
*/
type PatchSourcesIDRolesRoleIDNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchSourcesIDRolesRoleIDNotFound creates PatchSourcesIDRolesRoleIDNotFound with default headers values
func NewPatchSourcesIDRolesRoleIDNotFound() *PatchSourcesIDRolesRoleIDNotFound {
	return &PatchSourcesIDRolesRoleIDNotFound{}
}

// WithPayload adds the payload to the patch sources Id roles role Id not found response
func (o *PatchSourcesIDRolesRoleIDNotFound) WithPayload(payload *models.Error) *PatchSourcesIDRolesRoleIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch sources Id roles role Id not found response
func (o *PatchSourcesIDRolesRoleIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchSourcesIDRolesRoleIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PatchSourcesIDRolesRoleIDDefault A processing or an unexpected error.

swagger:response patchSourcesIdRolesRoleIdDefault
*/
type PatchSourcesIDRolesRoleIDDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchSourcesIDRolesRoleIDDefault creates PatchSourcesIDRolesRoleIDDefault with default headers values
func NewPatchSourcesIDRolesRoleIDDefault(code int) *PatchSourcesIDRolesRoleIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PatchSourcesIDRolesRoleIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the patch sources ID roles role ID default response
func (o *PatchSourcesIDRolesRoleIDDefault) WithStatusCode(code int) *PatchSourcesIDRolesRoleIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the patch sources ID roles role ID default response
func (o *PatchSourcesIDRolesRoleIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the patch sources ID roles role ID default response
func (o *PatchSourcesIDRolesRoleIDDefault) WithPayload(payload *models.Error) *PatchSourcesIDRolesRoleIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch sources ID roles role ID default response
func (o *PatchSourcesIDRolesRoleIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchSourcesIDRolesRoleIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
