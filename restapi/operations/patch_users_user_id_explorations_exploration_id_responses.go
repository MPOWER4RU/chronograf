package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/influxdata/chronograf/models"
)

/*PatchUsersUserIDExplorationsExplorationIDOK Exploration's configuration was changed

swagger:response patchUsersUserIdExplorationsExplorationIdOK
*/
type PatchUsersUserIDExplorationsExplorationIDOK struct {

	// In: body
	Payload *models.Exploration `json:"body,omitempty"`
}

// NewPatchUsersUserIDExplorationsExplorationIDOK creates PatchUsersUserIDExplorationsExplorationIDOK with default headers values
func NewPatchUsersUserIDExplorationsExplorationIDOK() *PatchUsersUserIDExplorationsExplorationIDOK {
	return &PatchUsersUserIDExplorationsExplorationIDOK{}
}

// WithPayload adds the payload to the patch users user Id explorations exploration Id o k response
func (o *PatchUsersUserIDExplorationsExplorationIDOK) WithPayload(payload *models.Exploration) *PatchUsersUserIDExplorationsExplorationIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch users user Id explorations exploration Id o k response
func (o *PatchUsersUserIDExplorationsExplorationIDOK) SetPayload(payload *models.Exploration) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchUsersUserIDExplorationsExplorationIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PatchUsersUserIDExplorationsExplorationIDNotFound Data source id, user, or exploration does not exist.

swagger:response patchUsersUserIdExplorationsExplorationIdNotFound
*/
type PatchUsersUserIDExplorationsExplorationIDNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchUsersUserIDExplorationsExplorationIDNotFound creates PatchUsersUserIDExplorationsExplorationIDNotFound with default headers values
func NewPatchUsersUserIDExplorationsExplorationIDNotFound() *PatchUsersUserIDExplorationsExplorationIDNotFound {
	return &PatchUsersUserIDExplorationsExplorationIDNotFound{}
}

// WithPayload adds the payload to the patch users user Id explorations exploration Id not found response
func (o *PatchUsersUserIDExplorationsExplorationIDNotFound) WithPayload(payload *models.Error) *PatchUsersUserIDExplorationsExplorationIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch users user Id explorations exploration Id not found response
func (o *PatchUsersUserIDExplorationsExplorationIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchUsersUserIDExplorationsExplorationIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PatchUsersUserIDExplorationsExplorationIDDefault A processing or an unexpected error.

swagger:response patchUsersUserIdExplorationsExplorationIdDefault
*/
type PatchUsersUserIDExplorationsExplorationIDDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchUsersUserIDExplorationsExplorationIDDefault creates PatchUsersUserIDExplorationsExplorationIDDefault with default headers values
func NewPatchUsersUserIDExplorationsExplorationIDDefault(code int) *PatchUsersUserIDExplorationsExplorationIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PatchUsersUserIDExplorationsExplorationIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the patch users user ID explorations exploration ID default response
func (o *PatchUsersUserIDExplorationsExplorationIDDefault) WithStatusCode(code int) *PatchUsersUserIDExplorationsExplorationIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the patch users user ID explorations exploration ID default response
func (o *PatchUsersUserIDExplorationsExplorationIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the patch users user ID explorations exploration ID default response
func (o *PatchUsersUserIDExplorationsExplorationIDDefault) WithPayload(payload *models.Error) *PatchUsersUserIDExplorationsExplorationIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch users user ID explorations exploration ID default response
func (o *PatchUsersUserIDExplorationsExplorationIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchUsersUserIDExplorationsExplorationIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
