package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/influxdata/chronograf/models"
)

/*GetSourcesIDKapacitorsOK An array of kapacitors

swagger:response getSourcesIdKapacitorsOK
*/
type GetSourcesIDKapacitorsOK struct {

	// In: body
	Payload *models.Kapacitors `json:"body,omitempty"`
}

// NewGetSourcesIDKapacitorsOK creates GetSourcesIDKapacitorsOK with default headers values
func NewGetSourcesIDKapacitorsOK() *GetSourcesIDKapacitorsOK {
	return &GetSourcesIDKapacitorsOK{}
}

// WithPayload adds the payload to the get sources Id kapacitors o k response
func (o *GetSourcesIDKapacitorsOK) WithPayload(payload *models.Kapacitors) *GetSourcesIDKapacitorsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sources Id kapacitors o k response
func (o *GetSourcesIDKapacitorsOK) SetPayload(payload *models.Kapacitors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSourcesIDKapacitorsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetSourcesIDKapacitorsDefault Unexpected internal service error

swagger:response getSourcesIdKapacitorsDefault
*/
type GetSourcesIDKapacitorsDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSourcesIDKapacitorsDefault creates GetSourcesIDKapacitorsDefault with default headers values
func NewGetSourcesIDKapacitorsDefault(code int) *GetSourcesIDKapacitorsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSourcesIDKapacitorsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get sources ID kapacitors default response
func (o *GetSourcesIDKapacitorsDefault) WithStatusCode(code int) *GetSourcesIDKapacitorsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get sources ID kapacitors default response
func (o *GetSourcesIDKapacitorsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get sources ID kapacitors default response
func (o *GetSourcesIDKapacitorsDefault) WithPayload(payload *models.Error) *GetSourcesIDKapacitorsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sources ID kapacitors default response
func (o *GetSourcesIDKapacitorsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSourcesIDKapacitorsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
