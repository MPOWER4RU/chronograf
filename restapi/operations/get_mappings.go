package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	context "golang.org/x/net/context"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetMappingsHandlerFunc turns a function with the right signature into a get mappings handler
type GetMappingsHandlerFunc func(context.Context, GetMappingsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetMappingsHandlerFunc) Handle(ctx context.Context, params GetMappingsParams) middleware.Responder {
	return fn(ctx, params)
}

// GetMappingsHandler interface for that can handle valid get mappings params
type GetMappingsHandler interface {
	Handle(context.Context, GetMappingsParams) middleware.Responder
}

// NewGetMappings creates a new http.Handler for the get mappings operation
func NewGetMappings(ctx *middleware.Context, handler GetMappingsHandler) *GetMappings {
	return &GetMappings{Context: ctx, Handler: handler}
}

/*GetMappings swagger:route GET /mappings getMappings

Mappings between app names and measurements

Mappings provide a means to alias measurement names found within a telegraf database and application layouts found within Chronograf


*/
type GetMappings struct {
	Context *middleware.Context
	Handler GetMappingsHandler
}

func (o *GetMappings) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetMappingsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(context.Background(), Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
