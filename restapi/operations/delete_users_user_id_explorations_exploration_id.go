package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	context "golang.org/x/net/context"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteUsersUserIDExplorationsExplorationIDHandlerFunc turns a function with the right signature into a delete users user ID explorations exploration ID handler
type DeleteUsersUserIDExplorationsExplorationIDHandlerFunc func(context.Context, DeleteUsersUserIDExplorationsExplorationIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteUsersUserIDExplorationsExplorationIDHandlerFunc) Handle(ctx context.Context, params DeleteUsersUserIDExplorationsExplorationIDParams) middleware.Responder {
	return fn(ctx, params)
}

// DeleteUsersUserIDExplorationsExplorationIDHandler interface for that can handle valid delete users user ID explorations exploration ID params
type DeleteUsersUserIDExplorationsExplorationIDHandler interface {
	Handle(context.Context, DeleteUsersUserIDExplorationsExplorationIDParams) middleware.Responder
}

// NewDeleteUsersUserIDExplorationsExplorationID creates a new http.Handler for the delete users user ID explorations exploration ID operation
func NewDeleteUsersUserIDExplorationsExplorationID(ctx *middleware.Context, handler DeleteUsersUserIDExplorationsExplorationIDHandler) *DeleteUsersUserIDExplorationsExplorationID {
	return &DeleteUsersUserIDExplorationsExplorationID{Context: ctx, Handler: handler}
}

/*DeleteUsersUserIDExplorationsExplorationID swagger:route DELETE /users/{user_id}/explorations/{exploration_id} deleteUsersUserIdExplorationsExplorationId

This specific exporer session will be removed.

*/
type DeleteUsersUserIDExplorationsExplorationID struct {
	Context *middleware.Context
	Handler DeleteUsersUserIDExplorationsExplorationIDHandler
}

func (o *DeleteUsersUserIDExplorationsExplorationID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewDeleteUsersUserIDExplorationsExplorationIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(context.Background(), Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
