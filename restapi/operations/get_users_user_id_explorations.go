package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	context "golang.org/x/net/context"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetUsersUserIDExplorationsHandlerFunc turns a function with the right signature into a get users user ID explorations handler
type GetUsersUserIDExplorationsHandlerFunc func(context.Context, GetUsersUserIDExplorationsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetUsersUserIDExplorationsHandlerFunc) Handle(ctx context.Context, params GetUsersUserIDExplorationsParams) middleware.Responder {
	return fn(ctx, params)
}

// GetUsersUserIDExplorationsHandler interface for that can handle valid get users user ID explorations params
type GetUsersUserIDExplorationsHandler interface {
	Handle(context.Context, GetUsersUserIDExplorationsParams) middleware.Responder
}

// NewGetUsersUserIDExplorations creates a new http.Handler for the get users user ID explorations operation
func NewGetUsersUserIDExplorations(ctx *middleware.Context, handler GetUsersUserIDExplorationsHandler) *GetUsersUserIDExplorations {
	return &GetUsersUserIDExplorations{Context: ctx, Handler: handler}
}

/*GetUsersUserIDExplorations swagger:route GET /users/{user_id}/explorations getUsersUserIdExplorations

GetUsersUserIDExplorations get users user ID explorations API

*/
type GetUsersUserIDExplorations struct {
	Context *middleware.Context
	Handler GetUsersUserIDExplorationsHandler
}

func (o *GetUsersUserIDExplorations) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetUsersUserIDExplorationsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(context.Background(), Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
